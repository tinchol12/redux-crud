{"version":3,"sources":["reducers/productosReducer.js","reducers/validacionReducer.js","reducers/index.js","types/index.js","store.js","components/Header.js","config/axios.js","actions/productosActions.js","components/Producto.js","components/Productos.js","actions/validacionActions.js","components/NuevoProducto.js","components/EditarProducto.js","App.js","serviceWorker.js","index.js"],"names":["initialState","productos","error","loading","producto","combineReducers","state","action","type","payload","filter","id","map","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Header","className","to","ClienteAxios","axios","create","baseURL","nuevoProducto","agregarProductoExito","agregarProductoError","obtenerProductosComienzo","descargaProductosExitosa","descargaProductosError","obtenerProductoEliminar","eliminarProductoExito","eliminarProductoError","obtenerProductoAction","obtenerProductoEditarExito","obtenerProductoEditarError","comenzarEdicionProductoAction","editarProductoExito","editarProductoError","Producto","dispatch","useDispatch","confirmarEliminarProducto","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","console","log","delete","respuesta","catch","borrarProductoAction","nombre","precio","onClick","Productos","useEffect","get","data","useSelector","Fragment","scope","key","validarFormularioAction","iniciarValidacion","NuevoProducto","history","useState","guardarNombre","guardarPrecio","agregarProducto","post","crearNuevoProductoAction","onSubmit","e","preventDefault","trim","push","placeholder","onChange","target","EditarProducto","match","nombreRef","useRef","precioRef","editarProducto","put","editarProductoAction","params","obtenerProductoEditarAction","current","defaultValue","ref","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d89b922f.chunk.js","sourcesContent":["import {\r\n    AGREGAR_PRODUCTO,\r\n    AGREGAR_PRODUCTO_ERROR,\r\n    AGREGAR_PRODUCTO_EXITO,\r\n    COMENZAR_DESCARGA_PRODUCTOS,\r\n    DESCARGA_PRODUCTOS_EXITOSA,\r\n    DESCARGA_PRODUCTOS_ERROR,\r\n    OBTENER_PRODUCTO_ELIMINAR,\r\n    PRODUCTO_ELIMINADO_EXITO,\r\n    PRODUCTO_ELIMINADO_ERROR,\r\n    OBTENER_PRODUCTO_EDITAR,\r\n    PRODUCTO_EDITAR_EXITO,\r\n    PRODUCTO_EDITAR_ERROR,\r\n    COMENZAR_EDICION_PRODUCTO,\r\n    PRODUCTO_EDITADO_EXITO,\r\n    PRODUCTO_EDITADO_ERROR\r\n\r\n} from '../types';\r\n\r\n//Cada reducer tiene su state\r\nconst initialState = {\r\n    productos: [],\r\n    error: null,\r\n    loading: false,\r\n    producto: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case AGREGAR_PRODUCTO:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case AGREGAR_PRODUCTO_EXITO:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                productos: [...state.productos, action.payload]\r\n            }\r\n            case AGREGAR_PRODUCTO_ERROR:\r\n                return {\r\n                    ...state,\r\n                    error: true\r\n                }\r\n            case COMENZAR_DESCARGA_PRODUCTOS:\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                    producto: {}\r\n                }\r\n            case DESCARGA_PRODUCTOS_EXITOSA:\r\n                return {\r\n                    ...state,\r\n                    productos: action.payload,\r\n                    loading: false,\r\n                    error: false,\r\n                    producto: {}\r\n                }\r\n            case DESCARGA_PRODUCTOS_ERROR:\r\n                return {\r\n                    ...state,\r\n                    productos: [],\r\n                    error: true,\r\n                    loading: false\r\n                }\r\n            case OBTENER_PRODUCTO_ELIMINAR:\r\n                return {\r\n                    ...state,\r\n                }\r\n            case PRODUCTO_ELIMINADO_EXITO:\r\n                return {\r\n                    ...state,\r\n                    error: null,\r\n                    producto: state.producto.filter(producto => producto.id !== action.payload)\r\n                }\r\n            case PRODUCTO_ELIMINADO_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n                }\r\n            case OBTENER_PRODUCTO_EDITAR:\r\n                return {\r\n                    ...state,\r\n                    error:null\r\n                }\r\n            case PRODUCTO_EDITAR_EXITO:\r\n                return {\r\n                    ...state,\r\n                    error:null,\r\n                    producto:action.payload\r\n               }\r\n            case PRODUCTO_EDITAR_ERROR:\r\n                return {\r\n                    ...state,\r\n                    error: true\r\n               }\r\n            case COMENZAR_EDICION_PRODUCTO:\r\n                return {\r\n                    ...state,\r\n                    error: null\r\n                }\r\n            case PRODUCTO_EDITADO_EXITO:\r\n                return {\r\n                    ...state,\r\n                    error:null,\r\n                    productos: state.productos.map(producto => producto.id === action.payload.id ? producto = action.payload : producto)\r\n                }\r\n            case PRODUCTO_EDITADO_ERROR:\r\n                return {\r\n                    ...state,\r\n                    error: true\r\n                }\r\n\r\n            default:  return state;\r\n    }\r\n}","import {\r\n    VALIDAR_FORMULARIO,\r\n    VALIDAR_FORMULARIO_EXITO,\r\n    VALIDAR_FORMULARIO_ERROR\r\n} from '../types';\r\n\r\nconst initialState = {\r\n    error:null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type)\r\n    {\r\n        case VALIDAR_FORMULARIO:\r\n            return {\r\n                ...state,\r\n                error : null\r\n            }\r\n        case VALIDAR_FORMULARIO_EXITO:\r\n            return {\r\n                ...state,\r\n                error : null\r\n            }\r\n        case VALIDAR_FORMULARIO_ERROR:\r\n            return {\r\n                ...state,\r\n                error : true\r\n            }\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport productosReducer from './productosReducer';\r\nimport validacionReducer from './validacionReducer';\r\n\r\n\r\nexport default combineReducers({\r\n\r\n        productos: productosReducer,\r\n        error: validacionReducer\r\n});","export const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const VALIDAR_FORMULARIO_EXITO = 'VALIDAR_FORMULARIO_EXITO';\r\nexport const VALIDAR_FORMULARIO_ERROR = 'VALIDAR_FORMULARIO_ERROR';\r\n\r\nexport const AGREGAR_PRODUCTO = 'AGREGAR_PRODUCTO';\r\nexport const AGREGAR_PRODUCTO_EXITO = 'AGREGAR_PRODUCTO_EXITO';\r\nexport const AGREGAR_PRODUCTO_ERROR = 'AGREGAR_PRODUCTO_ERROR';\r\n\r\nexport const COMENZAR_DESCARGA_PRODUCTOS = 'COMENZAR_DESCARGA_PRODUCTOS';\r\nexport const DESCARGA_PRODUCTOS_EXITOSA = 'DESCARGA_PRODUCTOS_EXITOSA';\r\nexport const DESCARGA_PRODUCTOS_ERROR = 'DESCARGA_PRODUCTOS_ERROR';\r\n\r\nexport const OBTENER_PRODUCTO_ELIMINAR = 'OBTENER_PRODUCTO_ELIMINAR';\r\nexport const PRODUCTO_ELIMINADO_EXITO = 'PRODUCTO_ELIMINADO_EXITO';\r\nexport const PRODUCTO_ELIMINADO_ERROR = 'PRODUCTO_ELIMINADO_ERROR';\r\n\r\nexport const OBTENER_PRODUCTO_EDITAR = 'OBTENER_PRODUCTO_EDITAR';\r\nexport const PRODUCTO_EDITAR_EXITO = 'PRODUCTO_EDITAR_EXITO';\r\nexport const PRODUCTO_EDITAR_ERROR = 'PRODUCTO_EDITAR_ERROR';\r\n\r\nexport const COMENZAR_EDICION_PRODUCTO = 'COMENZAR_EDICION_PRODUCTO';\r\nexport const PRODUCTO_EDITADO_EXITO = 'PRODUCTO_EDITADO_EXITO';\r\nexport const PRODUCTO_EDITADO_ERROR = 'PRODUCTO_EDITADO_EXITO';  \r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && \r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\r\n                <div className=\"container\">                \r\n                            <h1>\r\n                            <Link to={'/'} className=\"text-light\">\r\n                                     CRUD - React, Redux Hooks, REST API y Axios\r\n                            </Link>\r\n                            </h1>\r\n                            <Link to={'/productos/nuevo'} className=\"btn btn-danger nuevo-post d-block d-md-inline-block\">\r\n                                     Agregar Producto &#43;\r\n                            </Link>\r\n                </div>\r\n        </nav>\r\n\r\n                    \r\n    )\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst ClienteAxios = axios.create({\r\n    baseURL: 'https://my-json-server.typicode.com/tinchol12/productos/'\r\n});\r\n\r\nexport default ClienteAxios;","import {\r\n    AGREGAR_PRODUCTO,\r\n    AGREGAR_PRODUCTO_ERROR,\r\n    AGREGAR_PRODUCTO_EXITO,\r\n    COMENZAR_DESCARGA_PRODUCTOS,\r\n    DESCARGA_PRODUCTOS_EXITOSA,\r\n    DESCARGA_PRODUCTOS_ERROR,\r\n    OBTENER_PRODUCTO_ELIMINAR,\r\n    PRODUCTO_ELIMINADO_EXITO,\r\n    PRODUCTO_ELIMINADO_ERROR,\r\n    OBTENER_PRODUCTO_EDITAR,\r\n    PRODUCTO_EDITAR_EXITO,\r\n    PRODUCTO_EDITAR_ERROR,\r\n    COMENZAR_EDICION_PRODUCTO,\r\n    PRODUCTO_EDITADO_EXITO,\r\n    PRODUCTO_EDITADO_ERROR\r\n} from '../types';\r\n\r\nimport ClienteAxios from '../config/axios';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n//1RO. CREAR FUNCION PRINCIPAL (NUEVO PRODUCTO)\r\nexport function crearNuevoProductoAction(producto) {\r\n    return (dispatch) => {\r\n        dispatch(nuevoProducto());\r\n\r\n        //Insertar en la API\r\n        ClienteAxios.post('/libros',producto)\r\n        .then(respuesta => {\r\n            console.log(respuesta)\r\n            dispatch( agregarProductoExito(producto) )\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            //Si hay un error\r\n            dispatch(agregarProductoError())\r\n        })        \r\n    }\r\n}\r\n\r\nexport const nuevoProducto = () => ({\r\n    type: AGREGAR_PRODUCTO\r\n})\r\n\r\nexport const agregarProductoExito = producto => ({\r\n    type: AGREGAR_PRODUCTO_EXITO, \r\n    payload: producto\r\n})\r\n\r\nexport const agregarProductoError = error => ({\r\n    type: AGREGAR_PRODUCTO_ERROR\r\n})\r\n\r\n//Obtener listado de producots (API)\r\nexport function obtenerProductosAction() {\r\n    return (dispatch) => {\r\n        dispatch(obtenerProductosComienzo());\r\n\r\n        //Consultar a la API\r\n        ClienteAxios.get('/libros')\r\n        .then(respuesta => {\r\n          //  console.log(respuesta);\r\n            dispatch(descargaProductosExitosa(respuesta.data));\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch(descargaProductosError());\r\n        })\r\n    }\r\n}\r\n\r\nexport const obtenerProductosComienzo = () => ({\r\n    type: COMENZAR_DESCARGA_PRODUCTOS\r\n})\r\n\r\nexport const descargaProductosExitosa = productos => ({\r\n    type: DESCARGA_PRODUCTOS_EXITOSA,\r\n    payload: productos\r\n})\r\n\r\nexport const descargaProductosError = () => ({\r\n    type: DESCARGA_PRODUCTOS_ERROR\r\n})\r\n\r\n//funcion que elimina un producto\r\nexport function borrarProductoAction(id){\r\n    return (dispatch) => \r\n    {\r\n        dispatch(obtenerProductoEliminar())\r\n\r\n        //Eliminar en la API\r\n        ClienteAxios.delete(`/libros/${id}`)\r\n        .then(respuesta => {\r\n            console.log(respuesta);\r\n            dispatch(eliminarProductoExito(id));\r\n            Swal.fire(\r\n                'Almacenado',\r\n                'El Producto se Actualizó correctamente',\r\n                'success'\r\n            )\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch(eliminarProductoError());\r\n        })\r\n    }\r\n}\r\n\r\nexport const obtenerProductoEliminar = () => ({\r\n    type: OBTENER_PRODUCTO_ELIMINAR\r\n})\r\n\r\nexport const eliminarProductoExito = id => ({\r\n    type: PRODUCTO_ELIMINADO_EXITO,\r\n    payload: id\r\n})\r\n\r\nexport const eliminarProductoError = () => ({\r\n    type: PRODUCTO_ELIMINADO_ERROR\r\n})\r\n\r\n//Obtener el producto a editar\r\nexport function obtenerProductoEditarAction(id) {\r\n    return(dispatch) => {\r\n        dispatch(obtenerProductoAction());\r\n\r\n        //obtener producto del api\r\n        ClienteAxios.get(`/libros/${id}`)\r\n        .then( respuesta => {\r\n            dispatch(obtenerProductoEditarExito(respuesta.data));\r\n            console.log(respuesta.data);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch(obtenerProductoEditarError());\r\n        })\r\n    }\r\n}\r\n\r\nexport const obtenerProductoAction = () => ({\r\n    type: OBTENER_PRODUCTO_EDITAR\r\n})\r\n\r\nexport const obtenerProductoEditarExito = (producto) => ({\r\n    type: PRODUCTO_EDITAR_EXITO,\r\n    payload: producto\r\n})\r\n\r\nexport const obtenerProductoEditarError = () => ({\r\n    type: PRODUCTO_EDITAR_ERROR\r\n})\r\n\r\n//Modifica un producto en la API y state\r\n\r\nexport function editarProductoAction(producto) {\r\n    return(dispatch) => {\r\n        dispatch(comenzarEdicionProductoAction())\r\n\r\n        //Consultar la API\r\n        ClienteAxios.put(`/libros/${producto.id}`, producto)\r\n        .then(respuesta => {\r\n           // console.log(respuesta);\r\n            dispatch(editarProductoExito(respuesta.data));\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            dispatch(editarProductoError());\r\n        })\r\n    }\r\n}\r\n\r\nexport const comenzarEdicionProductoAction = () => ({\r\n    type: COMENZAR_EDICION_PRODUCTO\r\n})\r\n\r\nexport const editarProductoExito = producto => ({\r\n    type: PRODUCTO_EDITADO_EXITO,\r\n    payload: producto\r\n})\r\n\r\nexport const editarProductoError = () => ({\r\n    type: PRODUCTO_EDITADO_ERROR\r\n})\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport  Swal  from 'sweetalert2';\r\n\r\n//Redux\r\nimport { borrarProductoAction } from '../actions/productosActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Producto = ({producto}) => {\r\n\r\n    //Dispatch para ejecutar las acciones\r\n    const dispatch = useDispatch();\r\n\r\n    const confirmarEliminarProducto = id => {\r\n\r\n        //Preguntar al usuario\r\n        Swal.fire({\r\n            title: 'Esta seguro de querer eliminar?',\r\n            text: \"Producto eliminado no puede ser restaurado\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, Eliminar!',\r\n            cancelButtonText: 'Cancelar'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              Swal.fire(\r\n                'Eliminado!',\r\n                'El libro ha sido eliminado corretamente',\r\n                'success'\r\n              )\r\n              //Confirmación de SweetAlert\r\n              console.log(id);\r\n             dispatch(borrarProductoAction(id));\r\n            }\r\n          })\r\n    }\r\n\r\n       return (\r\n        <tr>\r\n            <td>{producto.nombre}</td>\r\n            <td><span className=\"font-weight-bold\">$ {producto.precio}</span></td>\r\n            <td className=\"acciones\">\r\n                    <Link to={`/productos/editar/${producto.id}`}\r\n                          className=\"btn btn-primary mr-2\">\r\n                              Editar\r\n                    </Link>\r\n\r\n                    <button className=\"btn btn-danger\"  \r\n                            onClick={ () => confirmarEliminarProducto(producto.id) }>\r\n                        Eliminar\r\n                    </button>\r\n\r\n            </td>\r\n        </tr>\r\n\r\n       );\r\n}\r\n\r\nexport default Producto;","import React, { useEffect } from 'react';\r\nimport Producto from './Producto';\r\n\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { obtenerProductosAction } from '../actions/productosActions';\r\n\r\nconst Productos = () => {\r\n\r\n    //Llamar la acción para retornar productos\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect ( () => {\r\n        //Aca se llaman a los productos cuando el componente este listo\r\n        const cargarProductos = () => dispatch(obtenerProductosAction());\r\n        cargarProductos();\r\n    },[] );\r\n\r\n    //Acceder al state\r\n    const loading = useSelector(state => state.productos.loading);\r\n    const error = useSelector(state => state.productos.error);\r\n    const productos = useSelector(state => state.productos.productos);\r\n\r\n    return (\r\n            <React.Fragment>    \r\n                    { error ? \r\n                    <div className=\"font-weight-bold alert alert-danger text-center mt-4\">Hubo un error</div>\r\n                            : null }\r\n                       \r\n                                    <h2 className=\"text-center my-5\">Listado de Productos</h2>\r\n\r\n                                    <table className=\"table table-striped\">\r\n                                        <thead className=\"bg-primary table-dark\">\r\n                                            <tr>\r\n                                                <th scope=\"col\">Nombre</th>\r\n                                                <th scope=\"col\">Precio</th>\r\n                                                <th scope=\"col\">Acciones</th>\r\n                                            </tr>   \r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {productos.map(producto => (\r\n                                                <Producto\r\n                                                    key={producto.id}\r\n                                                    producto={producto}\r\n                                                />\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    {loading ? 'Cargando...' : null}\r\n                           \r\n                                          \r\n            </React.Fragment>            \r\n    );\r\n}\r\n\r\nexport default Productos;","import {\r\n    VALIDAR_FORMULARIO,\r\n    VALIDAR_FORMULARIO_EXITO,\r\n    VALIDAR_FORMULARIO_ERROR\r\n} from '../types';\r\n\r\n\r\nexport function validarFormularioAction() {\r\n    return (dispatch) => {\r\n        dispatch( iniciarValidacion() )        \r\n    }\r\n}\r\n\r\nexport const iniciarValidacion = () => {\r\n    return {\r\n        type: VALIDAR_FORMULARIO\r\n    }\r\n}\r\n\r\nexport const validacionExito = () => {\r\n    return {\r\n        type: VALIDAR_FORMULARIO_EXITO\r\n    }\r\n}\r\n\r\nexport const validacionError = () => {\r\n    return {\r\n        type: VALIDAR_FORMULARIO_ERROR\r\n    }\r\n}","import React, { useState } from 'react';\r\n\r\n\r\n//Redux\r\nimport { crearNuevoProductoAction } from '../actions/productosActions';\r\nimport { validarFormularioAction, validacionExito, validacionError } from '../actions/validacionActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst NuevoProducto = ({history}) => {\r\n\r\n    //State\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [precio, guardarPrecio] = useState('');\r\n\r\n    //Crear nuevo producto\r\n    const dispatch = useDispatch();\r\n    const agregarProducto = (producto) => dispatch(crearNuevoProductoAction(producto));\r\n\r\n    //Validaciones\r\n    const validarFormulario = () => dispatch (validarFormularioAction());\r\n    const exitoValidacion = () => dispatch(validacionExito());\r\n    const errorValidacion = () => dispatch(validacionError());\r\n\r\n    //Obtener los datos del state\r\n    const error = useSelector((state) => state.error.error);\r\n\r\n    //Nuevo  producto\r\n    const submitNuevoProducto = e => \r\n    {\r\n        e.preventDefault();\r\n\r\n        validarFormulario();       \r\n\r\n        //Validar formulario\r\n        if(nombre.trim() ==='' || precio.trim() === '')\r\n        {\r\n            errorValidacion();\r\n            return;\r\n        } \r\n      \r\n        //Si pasa la validación\r\n        exitoValidacion();\r\n\r\n        //Crear nuevo producto\r\n        agregarProducto({\r\n            nombre, precio\r\n        });\r\n        //Redireccionar al usuario\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center mt-5\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"text-center mb-4 font-weight-bold \">Agregar Nuevo Libro</h2>\r\n                        <form\r\n                            onSubmit={submitNuevoProducto}\r\n                        >\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Nombre Libro</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Nombre Libro\"\r\n                                    value={nombre} \r\n                                    onChange={e => guardarNombre(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Precio Libro</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Precio Libro\" \r\n                                    value={precio}\r\n                                    onChange= {e => guardarPrecio(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Agregar</button>\r\n                        </form>\r\n\r\n                        { error ? <div className=\"font-weight-bold alert alert-danger text-center mt-4\"> Todos los campos son obligatorios</div> : null }\r\n        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NuevoProducto;","import React, { useEffect, Fragment, useRef } from 'react';\r\n\r\n//redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { obtenerProductoEditarAction, editarProductoAction } from '../actions/productosActions';\r\nimport { validarFormularioAction, validacionExito, validacionError } from '../actions/validacionActions';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nconst EditarProducto = ({match, history}) => {\r\n   \r\n    //Crear los REf\r\n    const nombreRef = useRef('');\r\n    const precioRef = useRef('');\r\n\r\n\r\n   //Dispach para ejecutar la funcion principal\r\n   const dispatch = useDispatch();\r\n   \r\n   const editarProducto = (producto) => dispatch(editarProductoAction(producto)); \r\n\r\n     //Validaciones\r\n     const validarFormulario = () => dispatch (validarFormularioAction());\r\n     const exitoValidacion = () => dispatch(validacionExito());\r\n     const errorValidacion = () => dispatch(validacionError());\r\n\r\n    //Obtener el ID para editar\r\n    const {id} = match.params;\r\n\r\n\r\n   useEffect( () => {\r\n       dispatch(obtenerProductoEditarAction(id));\r\n   }, [dispatch, id]);\r\n\r\n   //acceder al state\r\n   const producto = useSelector( state => state.productos.producto);\r\n   const error = useSelector( state => state.productos.error);\r\n   \r\n   //cuando carga la API\r\n   if(!producto) return ('Cargando...');\r\n\r\n   const submitEditarProducto = e => {\r\n       e.preventDefault();\r\n\r\n       //Validar el formulario\r\n        validarFormulario();\r\n\r\n        if(nombreRef.current.value.trim() === '' || precioRef.current.value.trim() === '')\r\n        {\r\n            errorValidacion();\r\n            return;\r\n        }\r\n    \r\n       //Si no hay error\r\n            exitoValidacion();\r\n\r\n       //Guardar los cambios\r\n       console.log(nombreRef.current.value);\r\n       editarProducto({\r\n           id,\r\n           nombre: nombreRef.current.value,\r\n           precio: precioRef.current.value\r\n       });\r\n\r\n       \r\n\r\n       //Redireccionar\r\n       history.push('/');\r\n   }\r\n   \r\n    return (\r\n        \r\n        <Fragment> \r\n        { error \r\n        ?        \r\n            <div className=\"font-weight-bold alert alert-danger text-center mt-4\"> Hubo un error, intenta de nuevo </div> \r\n        : \r\n            <div className=\"row justify-content-center mt-5\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"text-center\">Editar Producto</h2>\r\n                        <form\r\n                            onSubmit={submitEditarProducto}\r\n                        >\r\n                            <div className=\"form-group\">\r\n                                <label>Titulo</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Titulo\"\r\n                                    defaultValue={producto.nombre}\r\n                                    ref={nombreRef}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Precio del Producto</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Precio\" \r\n                                    defaultValue={producto.precio}\r\n                                    ref={precioRef}\r\n                                />\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\">Guardar Cambios</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n}\r\n    </Fragment>    \r\n    );\r\n}\r\n\r\nexport default EditarProducto;","import React from 'react';\nimport{ BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n//Componentes\nimport Header from './components/Header';\nimport Productos from './components/Productos';\nimport NuevoProducto from './components/NuevoProducto';\nimport EditarProducto from './components/EditarProducto';\n\nfunction App() {\n  return (\n    <Router>\n                <Provider store={store}>    \n                  <Header />     \n                      <div className=\"container\">\n                            <Switch>\n                                      <Route exact path=\"/\" component={Productos} />\n                                      <Route exact path=\"/productos/nuevo\" component={NuevoProducto} />\n                                      <Route exact path=\"/productos/editar/:id\" component={EditarProducto} />\n                            </Switch>\n                      </div>\n                </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}